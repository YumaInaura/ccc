#!/usr/bin/env bash -eu

# Usuage
#
# $ eco docker rmi
#

_eco_path () {
  local eco_path=${ECO_HOME:-"$HOME/eco"}
  echo "$eco_path"
}

_eco_list () {
  for file in $(find  "$(_eco_path)/bin" ); do
    basename "$file" | sed -E 's/-/ /g'
  done
}

_eco_commands() {
  find $(_eco_path)/bin \
    -exec sh -c 'basename {}' \; | \
    sed -E 's/[^0-9A-Za-z-]//g' | \
    sed -E 's/-/ /g' | \
    grep -v -E ^bin$ | \
    sed -E 's/^/\$ eco /' 
 }

for arg in $@; do
  if [[ "$arg" == '--path' ]]; then
    _eco_path
    return
  elif [[ "$arg" == '--list' ]]; then
    _eco_list
    return
  elif [[ "$arg" == '--commands' ]]; then
    _eco_commands
    return
  fi
done

_eco () {

  local commands=''
  local options=''
  
  for arg in $@; do
    # Start with alphabet is command
    if [[ "$arg" =~ ^[a-z] ]]; then commands="$commands $arg"; fi
    # Start with hyphen is option
    if [[ "$arg" =~ ^- ]]; then options="$options $arg"; fi
  done
  
  commands=$(echo $commands | perl -pe 's/^ //')
  options=$(echo $options | perl -pe 's/^ //')
  
  local file_name=$(basename "$0")
  local script_file_name=$(echo "$commands" | perl -pe 's/ +/\//g');
  local script_full_path="$(_eco_path)/bin/$script_file_name"
  
  
  # part_of_command=$(echo "$@" | perl -pe 's/^\s*([a-z][a-z0-9]+)(.+?|$)/$1/g')
  #  grep -e "^$part_of_command" | \
 
  if [[ "$@" =~ --dry ]]; then
    echo "**** Detail ****" 
    for name in commands options script_file_name script_full_path; do
      echo "$name" $(eval echo '$'"$name")
    done
  fi
  
  if [[ -f "$script_full_path" ]]; then
    eval "$script_full_path" "$options"
  else
  
    if [[ -z "$(_eco_commands)" ]];
      then echo Command not found && return
    fi
    
    eval $(echo "$(_eco_commands)" | peco | sed 's/\$//')
  fi

}


_eco $@

